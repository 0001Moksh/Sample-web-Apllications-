# Sure! Here's an example of a simple car racing game in Python using the pygame library:

# python
import pygame
import random

# Initialize pygame
pygame.init()

# Set up the game window
screen_width, screen_height = 800, 600
window = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Car Racing Game")

# Define colors
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)

# Load images
car_img = pygame.image.load("car.png")
car_width, car_height = 60, 120

# Set up clock
clock = pygame.time.Clock()

# Define car position and speed
car_x = screen_width / 2 - car_width / 2
car_y = screen_height - car_height - 10
car_speed = 5

# Define enemy car properties
enemy_width, enemy_height = 60, 120
enemy_x = random.randint(0, screen_width - enemy_width)
enemy_y = -enemy_height
enemy_speed = 3

# Define score
score = 0

# Game loop
game_over = False
while not game_over:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = True

    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and car_x > 0:
        car_x -= car_speed
    if keys[pygame.K_RIGHT] and car_x < screen_width - car_width:
        car_x += car_speed

    # Update enemy car position
    enemy_y += enemy_speed
    if enemy_y > screen_height:
        enemy_x = random.randint(0, screen_width - enemy_width)
        enemy_y = -enemy_height
        score += 1

    # Check for collision
    if car_x < enemy_x + enemy_width and car_x + car_width > enemy_x and car_y < enemy_y + enemy_height and car_y + car_height > enemy_y:
        game_over = True

    # Draw background
    window.fill(white)

    # Draw car
    window.blit(car_img, (car_x, car_y))

    # Draw enemy car
    pygame.draw.rect(window, red, (enemy_x, enemy_y, enemy_width, enemy_height))

    # Display score
    font = pygame.font.SysFont(None, 30)
    text = font.render("Score: " + str(score), True, black)
    window.blit(text, (10, 10))

    # Refresh the screen
    pygame.display.update()
    clock.tick(60)

# Clean up pygame
pygame.quit()


# To run this code, you need to have the `pygame` library installed and have a car image (`car.png`)
#  in the same directory as the script. The code sets up a game window, handles player input,
#  updates the positions of the player and enemy cars, checks for collisions, and displays the score. 
# The game loop runs until the player collides with an enemy car, and then the game exits.
#  Generated by Y AI(Powered by ChatGPT-4), search Y AI at Google Play to download it